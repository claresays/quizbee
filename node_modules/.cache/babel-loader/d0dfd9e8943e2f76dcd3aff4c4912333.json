{"ast":null,"code":"var _jsxFileName = \"/Users/clarejung/quizbee/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\n\nclass QuizBee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: []\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"QuizBee\"), this.state.questionBank.length > 0 && this.state.questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: answers,\n      key: questionId,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(QuizBee, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/clarejung/quizbee/src/index.js"],"names":["React","Component","ReactDOM","quizService","QuestionBox","QuizBee","state","questionBank","getQuestions","then","question","setState","componentDidMount","render","length","map","answers","correct","questionId","answer","computeAnswer","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,YAAY,EAAE;AADV,KADoB;;AAAA,SAI5BC,YAJ4B,GAIb,MAAM;AACjBL,MAAAA,WAAW,GAAGM,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,aAAKC,QAAL,CAAc;AACVJ,UAAAA,YAAY,EAAEG;AADJ,SAAd;AAGH,OAJD;AAKH,KAV2B;AAAA;;AAW5BE,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,YAAL;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKP,KAAL,CAAWC,YAAX,CAAwBO,MAAxB,GAAiC,CAAjC,IAAsC,KAAKR,KAAL,CAAWC,YAAX,CAAwBQ,GAAxB,CAA4B,CAAC;AAACL,MAAAA,QAAD;AAAWM,MAAAA,OAAX;AAChEC,MAAAA,OADgE;AACvDC,MAAAA;AADuD,KAAD,kBAE3D,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAER,QADV;AAEA,MAAA,OAAO,EAAEM,OAFT;AAGA,MAAA,GAAG,EAAEE,UAHL;AAIA,MAAA,QAAQ,EAAEC,MAAM,IAAI,KAAKC,aAAL,CAAmBD,MAAnB,EAA0BF,OAA1B,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF+B,CAF3C,CADJ;AAeH;;AA9B2B;;AAiChCf,QAAQ,CAACW,MAAT,eAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA6BQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\n\nclass QuizBee extends Component {\n    state = {\n        questionBank: []\n    };\n    getQuestions = () => {\n        quizService().then(question => {\n            this.setState({\n                questionBank: question\n            })\n        })\n    }\n    componentDidMount() {\n        this.getQuestions();\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"title\">QuizBee</div>\n                {this.state.questionBank.length > 0 && this.state.questionBank.map(({question, answers, \n                    correct, questionId}) => (\n                        <QuestionBox \n                        question={question}\n                        options={answers}\n                        key={questionId}\n                        selected={answer => this.computeAnswer(answer,correct)}\n                        />\n                    )\n                    )}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<QuizBee />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}